@page "/"

@using MudBlazor
@using ScrumMaster.Models

<!--
    Home page displaying Scrum tasks in a table with CRUD functionality.
    Uses MudBlazor components for UI.
-->
<MudPaper Class="pa-4">

    <MudStack Class="pt-4 pb-4 pr-4" Row="true">     
        <MudTooltip Text="Add Row">
            <MudIconButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" Icon="@Icons.Material.Rounded.Add" OnClick="AddRow" /> 
        </MudTooltip>

        <MudTooltip Text="Reset All">
            <MudIconButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" Icon="@Icons.Material.Rounded.Restore" OnClick="ResetData" />
        </MudTooltip>
    </MudStack>

    <!--
        Main table displaying Scrum items.
        Properties:
        - Items: Binds to 'Items' list from the code-behind.
        - Hover, Bordered, Striped: UI options for table styling.
    -->
    <MudTable Items="Items" Hover="true" Bordered="true" Striped="true">

        <!-- Table header -->
        <HeaderContent>
            <MudTh>Assigned To</MudTh>
            <MudTh>Project</MudTh>
            <MudTh>Item Id</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Status</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>

        <!-- Table rows -->
        <RowTemplate Context="context">
            <!--
                Each row binds to a ScrumDetails object ('context').
                Provides editable fields and dropdowns for properties.
            -->
            <!-- Assigned To Dropdown -->
            <MudTd>
                <MudSelect T="string" @bind-Value="context.AssignedTo" Dense="true">
                    @foreach (var user in Users)
                    {
                        <MudSelectItem Value="@user.UserName">@user.UserName</MudSelectItem>
                    }
                </MudSelect>
            </MudTd>

            <!-- Project Dropdown -->
            <MudTd>
                <MudSelect T="int" @bind-Value="context.ProjectId" Dense="true">
                    @foreach (var project in Projects)
                    {
                        <MudSelectItem Value="@project.Id">@project.Name</MudSelectItem>
                    }
                </MudSelect>
            </MudTd>
          
            <MudTd>
                <MudTextField T="string" @bind-Value="context.ItemId" Immediate="true" />
            </MudTd>   
            
            <MudTd>
                <MudTextField T="string" Lines="2" @bind-Value="context.Description" Immediate="true" />
            </MudTd>

            <MudTd>
                <MudSelect T="ScrumDetails.ScrumStatus" @bind-Value="context.Status" Dense="true">
                    @foreach (var status in Enum.GetValues<ScrumDetails.ScrumStatus>())
                    {
                        <MudSelectItem Value="@status">@status</MudSelectItem>
                    }
                </MudSelect>
            </MudTd>

            <!-- Row Actions -->
            <MudTd>               
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => SaveChanges(context)">
                    Save
                </MudButton>              
                <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="() => Remove(context)">
                    Delete
                </MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>   
</MudPaper>
